[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "autonomia"
version = "0.1.0"
description = "Telegram bot for LLM-based processing, analyzing and answering messages"
authors = ["Mia Grigoreva <mia@superchromia.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.116.1"
uvicorn = "^0.35.0"
sqlalchemy = "^2.0.41"
alembic = "^1.16.4"
asyncpg = "^0.30.0"
psycopg2-binary = "^2.9.10"
telethon = "^1.40.0"
aiohttp = "^3.12.14"
apscheduler = "^3.11.0"
boto3 = "^1.39.4"
openai = "^1.96.0"
pillow = "^11.3.0"
requests = "^2.32.4"
tqdm = "^4.67.1"
jinja2 = "^3.1.2"
python-multipart = "^0.0.20"
sqladmin = {extras = ["full"], version = "^0.21.0"}
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
itsdangerous = "^2.0.0"
pgvector = "^0.4.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.1"
pytest = "^8.0.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.12.0"
aiosqlite = "^0.20.0"
black = "^24.0.0"

[tool.poetry.scripts]
autonomia = "app:main"

[tool.ruff]
# Same as Black.
line-length = 160

# Assume Python 3.11
target-version = "py311"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) codes
select = ["E", "F", "I", "W", "B", "C4", "UP", "N", "ARG", "SIM", "TCH", "Q", "RUF"]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "ARG001",  # unused function argument
    "ARG002",  # unused method argument
    "ARG003",  # unused class method argument
    "RUF006",  # store reference to return value
    "RUF013",  # implicit Optional
    "SIM117",  # use single with statement
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["api", "jobs", "models", "repositories", "storage", "external"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 160
target-version = ['py311'] 